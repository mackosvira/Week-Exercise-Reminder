#!/bin/bash


function new_weekly_plan() {

	# Create a weekly plan schedule by selecting:
	#   - 2x oldest exercises from each type of exercises

 	local file0=$1		# week_plan.txt
	local d0=$2		# directory of listed exercise type files
	local name=""		# extract the name of file from exercise files
	local dept=0		# exctract number of dept of the d0 directory (for cut cmd)

#    echo "New Weekly plan - under construction"
   	echo "Execute new_weekly_plan function:"
	
    # Check if file exists, if not creates with 2x execrciese per type
    if [ ! -f "$file0" ]; then
		# create the file together with list of exercises selected from exercise files lists
		dept=`echo $d0 | grep -o '/' | wc -l`
        dept=$(($dept + 2))
    #   echo $d0
    #   echo $dept
        for file in $d0/*.txt
		do
			name="`echo $file | cut -d/ -f"$dept" | cut -d. -f1`"
	#		echo $file
    #       echo $name
            sort -t ':' -k2 $file | head -n 2 | cut -d: -f1 | sed "s/^/$name:/" >> $file0
#			echo $name
		done
		# add "Not Started" to all exercises
		sed -i 's/$/:Not Started/' $file0
		printf "%4s-new weekly plan file \"$file0\" created\n"
		echo
		
	else
		printf "%4s-weekly plan \"$file0\" already exist\n"
		echo
	fi
   
}


function old_plan() {
	# check if weekplan is older than 7 days and ask to create new plan or continue with old one
	local file1=$1		# week_plan.txt
	local d1=$2
	local now=$(date +%s)
	local file_date=$(stat -c %W "$file1")
	local file_dif=$(($now - $file_date))
	local file_days=$(($file_dif / 86400))
#	echo "Execute old_plan function:"

	# check if file creation date is older then 7 days and recreate a new week plan if confirmed 
	if [ "$file_days" -ge 7 ]; then
		# delete the file    
		if env DISPLAY=:0.0 /usr/bin/zenity --question \
		--text="Week Plan is older than 7 days, do you want to create new plan?" \
		--ok-label "Create new plan" --cancel-label "Continue with existing plan";
		then
			rm "$file1"
#			printf "%4s-the old weekly plan \"$file1\" deleted\n"
			new_weekly_plan $file1 $d1
			printf "%4s-new weekly plan \"$file1\" created\n"
			echo
		fi
	else
#		printf "%4s-week plan is not older then 7 days\n"
		echo
	fi
}


function list_types() {
#	echo "Execute list_types function"
	
	local item=`env DISPLAY=:0.0 /usr/bin/zenity --list \
	--title="Select exercise type" \
	--column="Types of excercise:" "${exec_types[@]}" \
	--width=250 --height=300 \
	--ok-label "Continue" --cancel-label "Exit"   \
	--hide-column=0`
	
	if [ -z "$item" ]
	then
		env DISPLAY=:0.0 /usr/bin/zenity --question \
		--text="No selection made, do you want to exit?" \
		&& exit || return
	else
		show_plan $week_plan $item
	fi
}


function show_plan() {
	local file2=$1		# week_plan.txt
	local type=$2		# the type of exercise that is shown
	local num
	local n=0
	echo "Execute show_plan function for file \"$file2\" and type \"$type\""

	while IFS=: read -r col1 col2 col3; do
		if [ "$col1" = "$type" ]; then
			echo "$n"
			echo "$col1"
			echo "$col2"
			echo "$col3"
		fi
	done < $file2 >> "$file2".$$
	# cat "$file2".$$
	
	num=$(DISPLAY=:0.0 /usr/bin/zenity --list \
		--title="Mark completed exercise:" \
		--text="Choose an item:" \
		--column="No." \
		--column="Exercise type" \
		--column="Exercise" \
		--column="Status" \
		--separator="|" \
		--width=650 --height=200 \
		--ok-label "Mark as Completed" \
		--cancel-label "Main menu" \
		< "$file2".$$)
	
	rm "$file2".$$

	if [ -z "$num" ]
	then
		return
	fi
	
	# completed $file2 $num
	echo $num

}


function completed() {
    echo mark completed function
}